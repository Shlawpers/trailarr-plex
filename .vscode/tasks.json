{
	// For more information, visit: https://go.microsoft.com/fwlink/?LinkId=733558
	"version": "2.0.0",
	"tasks": [
		{
			"type": "shell",
			"label": "Docker build without Frontend",
			"detail": "Build the docker image without frontend changes",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"command": "docker image build --pull --file ./Dockerfile --tag 'trailarr2:latest' .",
			"group": "build",
			"icon": {
				"id": "library",
				"color": "terminal.ansiGreen"
			},
		},
		{
			"type": "docker-build",
			"label": "Docker build with Frontend",
			"detail": "Build the docker image with frontend changes",
			"icon": {
				"id": "library",
				"color": "terminal.ansiBlue"
			},
			"dependsOrder": "sequence",
			"dependsOn": [
				"Frontend build",
			],
			"platform": "python",
			"group": "build",
			"dockerBuild": {
				"tag": "trailarr2:latest",
				"dockerfile": "${workspaceFolder}/Dockerfile",
				"context": "${workspaceFolder}",
				"pull": true
			},
			"runOptions": {}
		},
		{
			"type": "shell",
			"label": "Docker build run without Frontend",
			"detail": "Run the docker image without frontend changes",
			"icon": {
				"id": "open-preview",
				"color": "terminal.ansiBlue"
			},
			"dependsOrder": "sequence",
			"dependsOn": [
				"Docker build without Frontend"
			],
			"command": "python ./restart_stack.py",
			"problemMatcher": []
		},
		{
			"type": "shell",
			"label": "Docker build run with Frontend",
			"detail": "Run the docker image with frontend changes",
			"icon": {
				"id": "open-preview",
				"color": "terminal.ansiGreen"
			},
			"dependsOn": [
				"Docker build with Frontend"
			],
			"command": "python ./restart_stack.py",
			"problemMatcher": []
		},
		{
			"label": "Generate PyTest HTML Report",
			"detail": "Generate PyTest HTML Report by running the tests",
			"icon": {
				"id": "beaker",
				"color": "terminal.ansiYellow"
			},
			"type": "shell",
			"command": "cd backend && pytest --cov=. --cov-report=html",
			"group": {
				"kind": "test",
				"isDefault": false
			},
			"presentation": {
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "npm: start",
			"type": "npm",
			"script": "start",
			"path": "frontend/",
			"isBackground": true,
			"problemMatcher": {
				"owner": "typescript",
				"pattern": "$tsc",
				"background": {
					"activeOnStart": true,
					"beginsPattern": {
						"regexp": "(.*?)"
					},
					"endsPattern": {
						"regexp": "bundle generation complete | Compiled |Failed to compile"
					}
				}
			}
		},
		{
			"label": "npm: test",
			"type": "npm",
			"script": "test",
			"path": "frontend/",
			"isBackground": true,
			"problemMatcher": {
				"owner": "typescript",
				"pattern": "$tsc",
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": {
						"regexp": "(.*?)"
					},
					"endsPattern": {
						"regexp": "bundle generation complete | Compiled |Failed to compile"
					}
				}
			}
		},
		{
			"label": "Frontend build",
			"detail": "Build the frontend using Angular CLI",
			"icon": {
				"id": "preview",
				"color": "terminal.ansiMagenta"
			},
			"type": "npm",
			"script": "build",
			"path": "frontend",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Fastapi run",
			"detail": "Run the FastAPI server",
			"icon": {
				"id": "vm-running",
				"color": "terminal.ansiCyan"
			},
			"type": "shell",
			"isBackground": true,
			"options": {
				"cwd": "${workspaceFolder}/backend",
				"env": {
					"PYTHON_PATH": "${workspaceFolder}/backend",
					"TZ": "UTC",
					"PYTHONDONTWRITEBYTECODE": "1",
					"PYTHONUNBUFFERED": "1"
				}
			},
			"command": "uvicorn main:trailarr_api --host 0.0.0.0 --port 7888",
			"problemMatcher": []
		},
		{
			"label": "GPG: Test Signing",
			"detail": "Sign a test message using GPG to cache the passphrase used for signing Git commits",
			"type": "shell",
			"command": "echo",
			"icon": {
				"id": "shield",
				"color": "terminal.ansiYellow"
			},
			"args": [
				"\"This is a test message for GPG signing.\"",
				"|",
				"gpg",
				"--clearsign"
			],
			"problemMatcher": [],
			"group": {
				"kind": "build",
				"isDefault": false
			}
		},
		{
			"label": "Generate OpenAPI Files",
			"detail": "Run export_openapi.py to generate openapi.json and openapi.yaml",
			"type": "shell",
			"command": "python3 ./export_openapi.py",
			"icon": {
				"id": "export",
				"color": "terminal.ansiMagenta"
			},
			"options": {
				"cwd": "${workspaceFolder}/backend",
				"env": {
					"PYTHON_PATH": "${workspaceFolder}/backend",
					"PYTHONDONTWRITEBYTECODE": "1",
					"PYTHONUNBUFFERED": "1",
					"LOG_LEVEL": "ERROR"
				}
			},
			"group": {
				"kind": "build",
				"isDefault": false
			},
			"presentation": {
				"reveal": "always"
			},
			"problemMatcher": []
		},
		{
			"label": "Create Alembic Migration",
			"detail": "Create a new Alembic migration",
			"type": "shell",
			"command": "./scripts/create_migration.sh",
			"icon": {
				"id": "database",
				"color": "terminal.ansiCyan"
			},
			"options": {
				"cwd": "${workspaceFolder}",
				"env": {
					"PYTHON_PATH": "${workspaceFolder}/backend",
					"PYTHONDONTWRITEBYTECODE": "1",
					"PYTHONUNBUFFERED": "1"
				}
			},
			"group": {
				"kind": "build",
				"isDefault": false
			},
			"presentation": {
				"reveal": "always"
			},
			"problemMatcher": [],
		}
	]
}