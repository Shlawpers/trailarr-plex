import{Y as x,d as _,e as m,g as S,j as b,k as y,m as f}from"./chunk-M4QNQTBX.js";var g={url:"",deserializer:n=>JSON.parse(n.data),serializer:n=>JSON.stringify(n)},W="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",p=class n extends y{constructor(t,s){if(super(),this._socket=null,t instanceof S)this.destination=s,this.source=t;else{let e=this._config=Object.assign({},g);if(this._output=new b,typeof t=="string")e.url=t;else for(let a in t)t.hasOwnProperty(a)&&(e[a]=t[a]);if(!e.WebSocketCtor&&WebSocket)e.WebSocketCtor=WebSocket;else if(!e.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new f}}lift(t){let s=new n(this._config,this.destination);return s.operator=t,s.source=this,s}_resetState(){this._socket=null,this.source||(this.destination=new f),this._output=new b}multiplex(t,s,e){let a=this;return new S(r=>{try{a.next(t())}catch(i){r.error(i)}let o=a.subscribe({next:i=>{try{e(i)&&r.next(i)}catch(c){r.error(c)}},error:i=>r.error(i),complete:()=>r.complete()});return()=>{try{a.next(s())}catch(i){r.error(i)}o.unsubscribe()}})}_connectSocket(){let{WebSocketCtor:t,protocol:s,url:e,binaryType:a}=this._config,r=this._output,o=null;try{o=s?new t(e,s):new t(e),this._socket=o,a&&(this._socket.binaryType=a)}catch(c){r.error(c);return}let i=new _(()=>{this._socket=null,o&&o.readyState===1&&o.close()});o.onopen=c=>{let{_socket:l}=this;if(!l){o.close(),this._resetState();return}let{openObserver:w}=this._config;w&&w.next(c);let d=this.destination;this.destination=m.create(h=>{if(o.readyState===1)try{let{serializer:u}=this._config;o.send(u(h))}catch(u){this.destination.error(u)}},h=>{let{closingObserver:u}=this._config;u&&u.next(void 0),h&&h.code?o.close(h.code,h.reason):r.error(new TypeError(W)),this._resetState()},()=>{let{closingObserver:h}=this._config;h&&h.next(void 0),o.close(),this._resetState()}),d&&d instanceof f&&i.add(d.subscribe(this.destination))},o.onerror=c=>{this._resetState(),r.error(c)},o.onclose=c=>{o===this._socket&&this._resetState();let{closeObserver:l}=this._config;l&&l.next(c),c.wasClean?r.complete():r.error(c)},o.onmessage=c=>{try{let{deserializer:l}=this._config;r.next(l(c))}catch(l){r.error(l)}}}_subscribe(t){let{source:s}=this;return s?s.subscribe(t):(this._socket||this._connectSocket(),this._output.subscribe(t),t.add(()=>{let{_socket:e}=this;this._output.observers.length===0&&(e&&(e.readyState===1||e.readyState===0)&&e.close(),this._resetState())}),t)}unsubscribe(){let{_socket:t}=this;t&&(t.readyState===1||t.readyState===0)&&t.close(),this._resetState(),super.unsubscribe()}};function k(n){return new p(n)}var R=(()=>{class n{constructor(){this.toastMessage=new b,this.connect()}connect(){if(!this.socket$||this.socket$.closed){let s=Math.floor(Math.random()*1e6),e=window.location.protocol==="https:"?"wss:":"ws:",a=window.location.hostname,r=window.location.port?`:${window.location.port}`:"",o=`${e}//${a}${r}/ws/${s}`;this.socket$=k(o),this.websocketSubscription=this.socket$.subscribe({next:i=>{this.toastMessage.next(i)},error:i=>{console.error("WebSocket error:",i)},complete:()=>{console.log("WebSocket connection closed")}})}return this.socket$.asObservable()}showToast(s,e="Success"){this.toastMessage.next({message:s,type:e})}close(){this.websocketSubscription&&this.websocketSubscription.unsubscribe(),this.socket$.complete()}static{this.\u0275fac=function(e){return new(e||n)}}static{this.\u0275prov=x({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();export{R as a};
