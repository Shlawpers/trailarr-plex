{
  "version": 3,
  "sources": ["src/app/helpers/scroll-near-end-directive.ts", "src/app/media/pipes/display-title.pipe.ts", "src/app/media/media.component.ts", "src/app/media/media.component.html", "src/app/media/routes.ts"],
  "sourcesContent": ["import {Directive, ElementRef, EventEmitter, HostListener, inject, Input, OnInit, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appScrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  private readonly el = inject(ElementRef);\n\n  @Output() nearEnd: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 200;\n\n  private window!: Window;\n\n  ngOnInit() {\n    // save window object for type safety\n    this.window = window;\n    // console.log('Scroll near end directive initialized');\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  windowScrollEvent(event: any) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight;\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight;\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY;\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight;\n\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement;\n\n    const scrollToBottom = heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage;\n\n    // console.log('windowScrollToBottom:', scrollToBottom);\n\n    // console.log(\n    //   currentScrolledY,\n    //   innerHeight,\n    //   heightOfWholePage,\n    //   spaceOfElementAndPage\n    // );\n\n    if (scrollToBottom < this.threshold) {\n      // console.log(\n      //     '%c [WinScrollNearEndDirective]: emit',\n      //     'color: #bada55; font-size: 20px'\n      // );\n      this.nearEnd.emit();\n    }\n  }\n}\n", "import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'displayTitle', pure: true})\nexport class DisplayTitlePipe implements PipeTransform {\n  /**\n   * Formats the given title string by removing the substring '_at' and capitalizing the first letter.\n   *\n   * @param title - The title string to be formatted.\n   * @returns The formatted option string with '_at' removed and the first letter capitalized.\n   */\n  transform(title: string): string {\n    title = title.replace('_at', '');\n    return title.charAt(0).toUpperCase() + title.slice(1);\n  }\n}\n", "import {NgTemplateOutlet} from '@angular/common';\nimport {Component, computed, ElementRef, inject, OnInit, signal, viewChild, ViewContainerRef} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {Router, RouterLink, RouterState} from '@angular/router';\nimport {ScrollNearEndDirective} from '../helpers/scroll-near-end-directive';\nimport {\n  booleanFilterKeys,\n  CustomFilter,\n  DateFilterCondition,\n  dateFilterKeys,\n  Filter,\n  NumberFilterCondition,\n  numberFilterKeys,\n  StringFilterCondition,\n  stringFilterKeys,\n} from '../models/customfilter';\nimport {mapMedia, Media} from '../models/media';\nimport {CustomfilterService} from '../services/customfilter.service';\nimport {MediaService} from '../services/media.service';\nimport {WebsocketService} from '../services/websocket.service';\nimport {LoadIndicatorComponent} from '../shared/load-indicator';\nimport {AddCustomFilterDialogComponent} from './add-filter-dialog/add-filter-dialog.component';\nimport {ProfileSelectDialogComponent} from './dialogs/profile-select-dialog/profile-select-dialog.component';\nimport {DisplayTitlePipe} from './pipes/display-title.pipe';\n\n@Component({\n  selector: 'app-media2',\n  imports: [FormsModule, NgTemplateOutlet, LoadIndicatorComponent, RouterLink, ScrollNearEndDirective, DisplayTitlePipe],\n  templateUrl: './media.component.html',\n  styleUrl: './media.component.scss',\n})\nexport class MediaComponent implements OnInit {\n  private readonly mediaService = inject(MediaService);\n  private readonly router = inject(Router);\n  private readonly webSocketService = inject(WebsocketService);\n  private viewContainerRef = inject(ViewContainerRef);\n\n  customfilterService = inject(CustomfilterService);\n\n  moviesOnly = signal<boolean | null>(null);\n  isLoading = signal<boolean>(true);\n\n  inEditMode: boolean = false;\n  selectedMedia: number[] = [];\n\n  sortOptions: (keyof Media)[] = ['title', 'year', 'added_at', 'updated_at'];\n  filterOptions: string[] = ['all', 'downloaded', 'downloading', 'missing', 'monitored', 'unmonitored'];\n  customFilters = signal<CustomFilter[]>([]);\n  allFilters = computed(() => {\n    return this.filterOptions.concat(this.customFilters().map((f) => f.filter_name));\n  });\n  selectedSort = signal<keyof Media>('added_at');\n  sortAscending = signal<boolean>(true);\n  selectedFilter = signal<string>('all');\n\n  defaultDisplayCount = 50;\n  displayCount = signal<number>(this.defaultDisplayCount);\n\n  allMedia = signal<Media[]>([]);\n  filteredSortedMedia = computed(() => this.computeFilteredNSortedMedia());\n  displayMedia = computed(() => this.filteredSortedMedia().slice(0, this.displayCount()));\n\n  private lastUpdateTime: number = 0;\n  private readonly UPDATE_INTERVAL: number = 3; // 3 seconds in seconds\n\n  ngOnInit() {\n    this.isLoading.set(true);\n    const state: RouterState = this.router.routerState;\n    const currentRoute = state.snapshot.url.toLowerCase();\n    // let type = this.route.snapshot.url[0].path;\n    switch (currentRoute) {\n      case '/movies':\n        this.moviesOnly.set(true);\n        break;\n      case '/series':\n        this.moviesOnly.set(false);\n        break;\n      default:\n        this.moviesOnly.set(null);\n        this.filterOptions = ['all', 'movies', 'series'];\n        this.selectedFilter.set('all');\n        this.selectedSort.set('updated_at');\n        this.sortAscending.set(false);\n    }\n    this.retrieveSortNFilterOptions();\n    // Get all media for Movies or Series, downloaded only for Home\n    let filterBy = this.moviesOnly() == null ? 'downloaded' : 'all';\n    this.mediaService.fetchAllMedia(this.moviesOnly(), filterBy).subscribe((mediaList) => {\n      this.allMedia.set(mediaList.map((media) => mapMedia(media)));\n      this.isLoading.set(false);\n    });\n\n    // Subscribe to WebSocket updates\n    this.webSocketService.toastMessage.subscribe(() => {\n      this.fetchUpdatedMedia();\n    });\n\n    // Fetch updated media items every 10 seconds\n    setTimeout(() => {\n      this.fetchUpdatedMedia();\n    }, 10000);\n  }\n\n  applyFilter(filter: Filter, media: Media): boolean {\n    let filterValue = filter.filter_value;\n    let filterBy = filter.filter_by;\n    // Boolean filters\n    if (booleanFilterKeys.includes(filterBy)) {\n      let origValue = media[filterBy] as boolean;\n      let filterValueBool = filterValue.toLowerCase() === 'true';\n      return origValue === filterValueBool;\n    }\n    // Date filters\n    if (dateFilterKeys.includes(filterBy)) {\n      let mediaDate = new Date(media[filterBy] as string);\n      let filterDate = new Date(filterValue);\n      switch (filter.filter_condition) {\n        case DateFilterCondition.IS_AFTER:\n          return mediaDate > filterDate;\n        case DateFilterCondition.IS_BEFORE:\n          return mediaDate < filterDate;\n        case DateFilterCondition.IN_THE_LAST:\n          let last = new Date();\n          last.setDate(last.getDate() - parseInt(filterValue));\n          return mediaDate > last;\n        case DateFilterCondition.NOT_IN_THE_LAST:\n          let last2 = new Date();\n          last2.setDate(last2.getDate() - parseInt(filterValue));\n          return mediaDate < last2;\n        case DateFilterCondition.EQUALS:\n          return mediaDate.getDate() === filterDate.getDate();\n        case DateFilterCondition.NOT_EQUALS:\n          return mediaDate.getDate() !== filterDate.getDate();\n        default:\n          return true;\n      }\n    }\n    // Number filters\n    if (numberFilterKeys.includes(filterBy)) {\n      let origValue = media[filterBy] as number;\n      let filterValueNum = parseInt(filterValue);\n      switch (filter.filter_condition) {\n        case NumberFilterCondition.GREATER_THAN:\n          return origValue > filterValueNum;\n        case NumberFilterCondition.GREATER_THAN_EQUAL:\n          return origValue >= filterValueNum;\n        case NumberFilterCondition.LESS_THAN:\n          return origValue < filterValueNum;\n        case NumberFilterCondition.LESS_THAN_EQUAL:\n          return origValue <= filterValueNum;\n        case NumberFilterCondition.EQUALS:\n          return origValue === filterValueNum;\n        case NumberFilterCondition.NOT_EQUALS:\n          return origValue !== filterValueNum;\n        default:\n          return true;\n      }\n    }\n    // String filters\n    if (stringFilterKeys.includes(filterBy)) {\n      let origValue = media[filterBy] as string;\n      switch (filter.filter_condition) {\n        case StringFilterCondition.CONTAINS:\n          return origValue.includes(filterValue);\n        case StringFilterCondition.NOT_CONTAINS:\n          return !origValue.includes(filterValue);\n        case StringFilterCondition.EQUALS:\n          return origValue === filterValue;\n        case StringFilterCondition.NOT_EQUALS:\n          return origValue !== filterValue;\n        case StringFilterCondition.STARTS_WITH:\n          return origValue.startsWith(filterValue);\n        case StringFilterCondition.NOT_STARTS_WITH:\n          return !origValue.startsWith(filterValue);\n        case StringFilterCondition.ENDS_WITH:\n          return origValue.endsWith(filterValue);\n        case StringFilterCondition.NOT_ENDS_WITH:\n          return !origValue.endsWith(filterValue);\n        case StringFilterCondition.IS_EMPTY:\n          return origValue === '';\n        case StringFilterCondition.IS_NOT_EMPTY:\n          return origValue !== '';\n        default:\n          return true;\n      }\n    }\n    return true;\n  }\n\n  filterDisplayed = false;\n  applyCustomFilter(filter_name: string, media: Media): boolean {\n    let customFilter = this.customFilters().find((f) => f.filter_name === filter_name);\n    if (!this.filterDisplayed) {\n      this.filterDisplayed = true;\n    }\n    if (!customFilter) {\n      return true;\n    }\n    // Apply filters until one of them returns false or all are applied\n    return customFilter.filters.every((filter) => this.applyFilter(filter, media));\n  }\n\n  /**\n   * Filters and sorts the media list based on the selected filter and sort options.\n   *\n   * @returns {Media[]} The filtered and sorted media list.\n   */\n  computeFilteredNSortedMedia(): Media[] {\n    // Filter the media list by the selected filter option\n    this.lastUpdateTime = Date.now();\n    let mediaList = this.allMedia().filter((media) => {\n      switch (this.selectedFilter()) {\n        case 'all':\n          return true;\n        case 'downloaded':\n          return media.trailer_exists;\n        case 'downloading':\n          return media.status.toLowerCase() === 'downloading';\n        case 'missing':\n          return !media.trailer_exists;\n        case 'monitored':\n          return media.monitor;\n        case 'unmonitored':\n          return !media.monitor && !media.trailer_exists;\n        case 'movies':\n          return media.is_movie && media.trailer_exists;\n        case 'series':\n          return !media.is_movie && media.trailer_exists;\n        default:\n          return this.applyCustomFilter(this.selectedFilter(), media);\n      }\n    });\n    // Sort the media list by the selected sort option\n    // Sorts the list in place. If sortAscending is false, reverses the list\n    mediaList.sort((a, b) => {\n      let aVal = a[this.selectedSort()];\n      let bVal = b[this.selectedSort()];\n      if (aVal instanceof Date && bVal instanceof Date) {\n        if (this.sortAscending()) {\n          return aVal.getTime() - bVal.getTime();\n        }\n        return bVal.getTime() - aVal.getTime();\n      }\n      if (typeof aVal === 'number' && typeof bVal === 'number') {\n        if (this.sortAscending()) {\n          return aVal - bVal;\n        }\n        return bVal - aVal;\n      }\n      if (this.sortAscending()) {\n        return a[this.selectedSort()].toString().localeCompare(b[this.selectedSort()].toString());\n      }\n      return b[this.selectedSort()].toString().localeCompare(a[this.selectedSort()].toString());\n    });\n    return mediaList;\n  }\n\n  /**\n   * Fetches updated media items from the server and updates the allMedia signal.\n   *\n   * @param {boolean} forceUpdate - Whether to force an update regardless of\n   * the time interval.\n   *\n   * @returns {void}\n   */\n  fetchUpdatedMedia(forceUpdate: boolean = false): void {\n    // Fetch updated media items from the server and update the allMedia signal\n    const currentTime = Date.now();\n    const delta = Math.min(Math.floor(Math.abs(currentTime - this.lastUpdateTime) / 1000), 1000);\n    if (delta > this.UPDATE_INTERVAL || forceUpdate) {\n      // Fetch updated media items\n      this.mediaService.fetchUpdatedMedia(delta).subscribe((mediaList) => {\n        let updatedMedia = mediaList.map((media) => mapMedia(media));\n        this.allMedia.update((existingMedia) => {\n          return existingMedia.map((media) => {\n            let updated = updatedMedia.find((m) => m.id === media.id);\n            if (updated) {\n              return updated;\n            }\n            return media;\n          });\n        });\n      });\n      // this.mediaService.fetchAllMedia(this.moviesOnly());\n      this.lastUpdateTime = currentTime;\n    }\n  }\n\n  /**\n   * Toggles the edit mode for the media list.\n   *\n   * @param {boolean} enabled - Whether to enable or disable edit mode.\n   * @returns {void}\n   */\n  toggleEditMode(enabled: boolean): void {\n    this.inEditMode = enabled;\n  }\n\n  selectAll(): void {\n    this.selectedMedia = this.filteredSortedMedia().map((media) => media.id);\n  }\n\n  /**\n   * Handles the event when a media item is selected, either by checking or unchecking a checkbox.\n   * Adds or removes the media item from the selectedMedia array based on the checkbox state.\n   *\n   * @param {Media} media - The media item that was selected.\n   * @param {Event} event - The event that triggered the selection.\n   * @returns {void}\n   */\n  onMediaSelected(media: Media, event: Event): void {\n    // Navigate to the media details page\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.checked) {\n      this.selectedMedia.push(media.id);\n    } else {\n      this.selectedMedia = this.selectedMedia.filter((id) => id !== media.id);\n    }\n  }\n\n  openProfileSelectDialog(): void {\n    // Open the dialog for selecting a profile\n    const dialogRef = this.viewContainerRef.createComponent(ProfileSelectDialogComponent);\n    dialogRef.instance.onSubmit.subscribe((profileId: number) => {\n      // Handle the profile selection\n      this.batchUpdate('download', profileId); // Perform the batch update action\n      dialogRef.destroy(); // Destroy the dialog after use\n    });\n    dialogRef.instance.onClosed.subscribe(() => {\n      // Handle dialog close\n      dialogRef.destroy(); // Destroy the dialog when closed\n    });\n  }\n\n  /**\n   * Handles the batch update action for the selected media items.\n   *\n   * @param {string} action\n   * The action to perform on the selected media items. Available actions are:\n   * - `monitor`: Monitor the selected media items.\n   * - `unmonitor`: Unmonitor the selected media items.\n   * - `delete`: Delete the trailers for the selected media items.\n   * - `download`: Download the trailers for the selected media items.\n   * @param {number} profileID\n   * The ID of the profile to use for the download action. \\\n   * Defaults to `-1` if not provided. \\\n   * Only required for `download` action.\n   * @returns {void}\n   */\n  batchUpdate(action: string, profileID: number = -1): void {\n    this.webSocketService.showToast(`Batch update: ${action} ${this.selectedMedia.length} items`);\n    this.mediaService.batchUpdate(this.selectedMedia, action, profileID).subscribe(() => {\n      this.fetchUpdatedMedia(true); // Fetch updated media items\n    });\n    this.selectedMedia = [];\n  }\n\n  /**\n   * Retrieves the sort and filter options from the local session.\n   * If no options are found, sets the default sort option to 'added_at' and the default filter option to 'all'.\n   *\n   * - The sort option is stored with the key `Trailarr{pageType}Sort`.\n   * - The sort order is stored with the key `Trailarr{pageType}SortAscending`.\n   * - The filter option is stored with the key `Trailarr{pageType}Filter`.\n   *\n   * @returns {void} This method does not return a value.\n   */\n  retrieveSortNFilterOptions(): void {\n    const moviesOnlyValue = this.moviesOnly();\n    const pageType = moviesOnlyValue == null ? 'AllMedia' : moviesOnlyValue ? 'Movies' : 'Series';\n    // Retrieve custom filters for the view from the server\n    this.customfilterService.getViewFilters(moviesOnlyValue).subscribe((filters) => {\n      this.customFilters.set(filters);\n    });\n    // Retrieve the filter option from the local session\n    let filterOption = localStorage.getItem(`Trailarr${pageType}Filter`);\n    if (filterOption) {\n      this.selectedFilter.set(filterOption);\n    }\n    // Retrieve the sort option from the local session\n    let sortOption = localStorage.getItem(`Trailarr${pageType}Sort`);\n    let sortAscending = localStorage.getItem(`Trailarr${pageType}SortAscending`);\n    if (sortOption) {\n      this.selectedSort.set(sortOption as keyof Media);\n    }\n    if (sortAscending) {\n      this.sortAscending.set(sortAscending == 'true');\n    }\n  }\n\n  /**\n   * Sets the media sort option and resets the display count to the default.\n   * Also, saves the sort option to the local session.\n   * If the same sort option is selected, toggles the sort direction.\n   *\n   * @param sortBy - The sort option to set.\n   * @returns {void} This method does not return a value.\n   */\n  setMediaSort(sortBy: keyof Media): void {\n    this.selectedMedia = []; // Clear the selected media items\n    this.displayCount.set(this.defaultDisplayCount); // Reset the display count to the default\n    if (this.selectedSort() === sortBy) {\n      // If the same sort option is selected, toggle the sort direction\n      this.sortAscending.set(!this.sortAscending());\n    } else {\n      // If a new sort option is selected, set the sort option and direction\n      this.selectedSort.set(sortBy);\n      this.sortAscending.set(true);\n    }\n    // Save the sort option to the local session\n    const moviesOnly = this.moviesOnly();\n    const pageType = moviesOnly == null ? 'AllMedia' : moviesOnly ? 'Movies' : 'Series';\n    localStorage.setItem(`Trailarr${pageType}Sort`, this.selectedSort());\n    localStorage.setItem(`Trailarr${pageType}SortAscending`, this.sortAscending().toString());\n    return;\n  }\n\n  /**\n   * Sets the media filter option and resets the display count to the default.\n   *\n   * @param filterBy - The filter option to set.\n   * @returns {void} This method does not return a value.\n   */\n  setMediaFilter(filterBy: string): void {\n    this.selectedMedia = []; // Clear the selected media items\n    // Reset the display count to the default\n    this.displayCount.set(this.defaultDisplayCount);\n    // Set the filter option\n    this.selectedFilter.set(filterBy);\n    // Save the filter option to the local session\n    const moviesOnly = this.moviesOnly();\n    const pageType = moviesOnly == null ? 'AllMedia' : moviesOnly ? 'Movies' : 'Series';\n    localStorage.setItem(`Trailarr${pageType}Filter`, this.selectedFilter());\n    return;\n  }\n\n  /**\n   * Handles the event when the user scrolls near the end of the media list.\n   * Loads more media items into the display list if there are more items to show.\n   *\n   * @returns {void} This method does not return a value.\n   */\n  onNearEndScroll(): void {\n    // Load more media when near the end of the scroll\n    if (this.displayCount() >= this.filteredSortedMedia().length) {\n      return;\n    }\n    this.displayCount.update((count) => count + this.defaultDisplayCount);\n  }\n\n  readonly showFiltersDialog = viewChild.required<ElementRef<HTMLDialogElement>>('showFiltersDialog');\n\n  openFilterDialog(): void {\n    if (this.customFilters().length === 0) {\n      this.openFilterEditDialog(null);\n    } else {\n      this.showFiltersDialog().nativeElement.showModal();\n    }\n    // this.isCustomFilterDialogOpen = true;\n  }\n\n  openFilterEditDialog(filter: CustomFilter | null): void {\n    this.showFiltersDialog().nativeElement.close();\n    // Open the dialog for adding or editing a custom filter\n    const dialogRef = this.viewContainerRef.createComponent(AddCustomFilterDialogComponent);\n    dialogRef.setInput('customFilter', filter);\n    dialogRef.setInput('filterType', this.moviesOnly() == null ? 'HOME' : this.moviesOnly() ? 'MOVIES' : 'SERIES');\n    dialogRef.instance.dialogClosed.subscribe(() => {\n      // Filter dialog closed, reload filters\n      this.retrieveSortNFilterOptions();\n      dialogRef.destroy();\n    });\n  }\n\n  deleteFilter(filter_id: number): void {\n    this.customfilterService.delete(filter_id).subscribe(() => {\n      this.customFilters.update((filters) => {\n        return filters.filter((f) => f.id !== filter_id);\n      });\n    });\n  }\n\n  closeFilterDialog(): void {\n    this.showFiltersDialog().nativeElement.close();\n    this.retrieveSortNFilterOptions(); // Retrieve custom filters\n  }\n}\n", "@if (!inEditMode) {\n  <div class=\"media-header\">\n    <!-- Edit Button -->\n    <div class=\"media-header-button\" (click)=\"inEditMode = true\" aria-label=\"Edit\" title=\"Edit\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\">\n        <path\n          d=\"M640-160v-360H160v360h480Zm80-200v-80h80v-360H320v200h-80v-200q0-33 23.5-56.5T320-880h480q33 0 56.5 23.5T880-800v360q0 33-23.5 56.5T800-360h-80ZM160-80q-33 0-56.5-23.5T80-160v-360q0-33 23.5-56.5T160-600h480q33 0 56.5 23.5T720-520v360q0 33-23.5 56.5T640-80H160Zm400-603ZM400-340Z\"\n        />\n      </svg>\n      <span>Edit</span>\n    </div>\n    <div class=\"empty-space\"></div>\n    <!-- Sort Options -->\n    <div class=\"media-header-sortitem\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n        <path d=\"M74-159v-135h304v135H74Zm0-255v-134h558v134H74Zm0-254v-135h812v135H74Z\" />\n      </svg>\n      <div>{{ selectedSort() | displayTitle }}</div>\n      <div class=\"sortitem-dropdown\">\n        @for (sortOption of sortOptions; track sortOption) {\n          <div class=\"sortitem-dropdown-option\" (click)=\"setMediaSort(sortOption)\">\n            {{ sortOption | displayTitle }}\n            @if (selectedSort() == sortOption) {\n              <div>\n                @if (sortAscending()) {\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n                    <path d=\"M480-130 200-410l96-96 184 185 184-185 96 96-280 280Zm0-299L200-708l96-97 184 185 184-185 96 97-280 279Z\" />\n                  </svg>\n                } @else {\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n                    <path d=\"m296-155-96-97 280-279 280 279-96 97-184-185-184 185Zm0-299-96-96 280-280 280 280-96 96-184-185-184 185Z\" />\n                  </svg>\n                }\n              </div>\n            }\n          </div>\n        }\n      </div>\n    </div>\n\n    <!-- Filter Options -->\n    <div class=\"media-header-filteritem\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n        <path d=\"M371-158v-135h219v135H371ZM200-413v-135h558v135H200ZM74-668v-135h812v135H74Z\" />\n      </svg>\n      <div>{{ selectedFilter() | displayTitle }}</div>\n      <div class=\"filteritem-dropdown\">\n        @for (filterOption of allFilters(); track filterOption) {\n          <div class=\"filteritem-dropdown-option\" (click)=\"setMediaFilter(filterOption)\">\n            {{ filterOption | displayTitle }}\n            @if (selectedFilter() == filterOption) {\n              <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n                  <path d=\"M382-200 113-469l97-97 172 173 369-369 97 96-466 466Z\" />\n                </svg>\n              </div>\n            }\n          </div>\n        }\n        <div class=\"filteritem-dropdown-option\" (click)=\"openFilterDialog()\" aria-label=\"CustomFilters\" title=\"Edit\">\n          <span>Custom Filters</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"icon\">\n            <path\n              d=\"M421-97v-248h83v83h353v83H504v82h-83Zm-318-82v-83h270v83H103Zm187-178v-82H103v-82h187v-84h83v248h-83Zm131-82v-82h436v82H421Zm166-176v-248h83v82h187v83H670v83h-83Zm-484-83v-83h436v83H103Z\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  </div>\n} @else {\n  <!-- Edit Mode Header -->\n  <div class=\"media-header edit\">\n    <!-- Monitor Button -->\n    <div class=\"media-header-button\" (click)=\"batchUpdate('monitor')\" aria-label=\"Monitor\" title=\"Monitor\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Monitor\">\n        <path\n          d=\"M713-600 600-713l56-57 57 57 141-142 57 57-198 198ZM200-120v-640q0-33 23.5-56.5T280-840h280q-20 30-30 57.5T520-720q0 72 45.5 127T680-524q23 3 40 3t40-3v404L480-240 200-120Z\"\n        />\n      </svg>\n      <span>Monitor</span>\n    </div>\n    <!-- Unmonitor Button -->\n    <div class=\"media-header-button\" (click)=\"batchUpdate('unmonitor')\" aria-label=\"UnMonitor\" title=\"UnMonitor\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"UnMonitor\">\n        <path\n          d=\"M200-120v-640q0-33 23.5-56.5T280-840h240v80H280v518l200-86 200 86v-278h80v400L480-240 200-120Zm80-640h240-240Zm400 160v-80h-80v-80h80v-80h80v80h80v80h-80v80h-80Z\"\n        />\n      </svg>\n      <span>UnMonitor</span>\n    </div>\n    <!-- Download Trailer Button -->\n    <div class=\"media-header-button\" (click)=\"openProfileSelectDialog()\" aria-label=\"Download\" title=\"Download\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Download\">\n        <path\n          d=\"M480-320 280-520l56-58 104 104v-326h80v326l104-104 56 58-200 200ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z\"\n        />\n      </svg>\n      <span>Download</span>\n    </div>\n    <!-- Delete Trailer Button -->\n    <div class=\"media-header-button delete\" (click)=\"batchUpdate('delete')\" aria-label=\"Delete\" title=\"Delete\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Delete\">\n        <path\n          d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"\n        />\n      </svg>\n      <span>Delete</span>\n    </div>\n    <!-- Cancel Button -->\n    <div class=\"media-header-button\" (click)=\"toggleEditMode(false)\" aria-label=\"Cancel\" title=\"Cancel\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Cancel\">\n        <path\n          d=\"M819-28 407-440H160v280h480v-161l80 80v81q0 33-23.5 56.5T640-80H160q-33 0-56.5-23.5T80-160v-360q0-33 23.5-56.5T160-600h80v-7L27-820l57-57L876-85l-57 57Zm-99-327-80-80-165-165h165q33 0 56.5 23.5T720-520v80h80v-280H355L246-829q8-23 28.5-37t45.5-14h480q33 0 56.5 23.5T880-800v360q0 33-23.5 56.5T800-360h-80v5Z\"\n        />\n      </svg>\n      <span>Cancel</span>\n    </div>\n    <div class=\"empty-space\"></div>\n    <!-- Selected Count -->\n    <p class=\"count\">\n      <span>Selected: </span>\n      {{ selectedMedia.length }}\n      <span> / {{ filteredSortedMedia().length }}</span>\n    </p>\n    <!-- Select All Button -->\n    <div class=\"media-header-button\" (click)=\"selectAll()\" aria-label=\"Select All\" title=\"Select All\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Clear\">\n        <path\n          d=\"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q8 0 15 1.5t14 4.5l-74 74H200v560h560v-266l80-80v346q0 33-23.5 56.5T760-120H200Zm261-160L235-506l56-56 170 170 367-367 57 55-424 424Z\"\n        />\n      </svg>\n    </div>\n    <!-- Clear Button -->\n    <div class=\"media-header-button\" (click)=\"selectedMedia = []\" aria-label=\"Clear\" title=\"Clear\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"button-icon\" aria-label=\"Clear\">\n        <path\n          d=\"m500-120-56-56 142-142-142-142 56-56 142 142 142-142 56 56-142 142 142 142-56 56-142-142-142 142Zm-220 0v-80h80v80h-80Zm-80-640h-80q0-33 23.5-56.5T200-840v80Zm80 0v-80h80v80h-80Zm160 0v-80h80v80h-80Zm160 0v-80h80v80h-80Zm160 0v-80q33 0 56.5 23.5T840-760h-80ZM200-200v80q-33 0-56.5-23.5T120-200h80Zm-80-80v-80h80v80h-80Zm0-160v-80h80v80h-80Zm0-160v-80h80v80h-80Zm640 0v-80h80v80h-80Z\"\n        />\n      </svg>\n    </div>\n  </div>\n}\n\n<div class=\"media-container\">\n  <!-- <h1 class=\"text-center\">{{title}}</h1> -->\n  @if (isLoading()) {\n    <app-load-indicator class=\"center\" />\n  } @else {\n    @if (filteredSortedMedia().length === 0) {\n      <!-- No media items found -->\n      <div class=\"center\">\n        <!-- Table Eye Icon - Google Fonts -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"empty-icon\">\n          <path\n            d=\"M215.38-160q-23.05 0-39.22-16.16Q160-192.33 160-215.38v-529.24q0-23.05 16.16-39.22Q192.33-800 215.38-800h529.24q23.05 0 39.22 16.16Q800-767.67 800-744.62V-418q-7.33-4.55-15.4-7.82-8.08-3.27-15.37-6.8v-185.84H495.38v201.61q-10.84 6.39-22.26 13.54-11.43 7.16-21.89 14.85H190.77v173.08q0 10.76 6.92 17.69 6.93 6.92 17.69 6.92h128.16q6.15 8.54 12.42 16.12 6.27 7.57 12.66 14.65H215.38Zm-24.61-259.23h273.85v-199.23H190.77v199.23Zm0-230h578.46v-95.39q0-10.76-6.92-17.69-6.93-6.92-17.69-6.92H215.38q-10.76 0-17.69 6.92-6.92 6.93-6.92 17.69v95.39ZM480-480Zm0 0Zm0 0Zm0 0ZM650.37-98.46q-71.22 0-131.91-36.54t-97.23-97.31q36.54-60.77 97.23-97.31 60.69-36.53 132.16-36.53 71.46 0 131.76 36.53 60.31 36.54 97.62 97.81-36.08 61.27-97.25 97.31T650.37-98.46Zm.25-30.77q57.76 0 108.07-28.35 50.31-28.34 85.08-74.73-34.77-46.38-84.9-74.73-50.12-28.34-108.64-28.34-57.38 0-108.08 28.34-50.69 28.35-84.69 74.73 34 46.39 84.69 74.73 50.7 28.35 108.47 28.35Zm-.12-67.69q-15.12 0-25.38-10.44-10.27-10.43-10.27-25.11t10.42-24.95q10.41-10.27 25.08-10.27 15.5 0 25.38 10.43 9.89 10.43 9.89 25.12 0 14.68-10.01 24.95-10 10.27-25.11 10.27Z\"\n          />\n        </svg>\n        <p>No media items found matching the selected filter!</p>\n        <!-- <div class=\"all-empty-card\" [routerLink]=\"['/settings', 'connections', 'add']\">\n                    Click me!\n                </div> -->\n      </div>\n    }\n\n    <div class=\"media-row\" appScrollNearEnd (nearEnd)=\"onNearEndScroll()\">\n      @for (media of displayMedia(); track media) {\n        <!-- <div class=\"media-card\" [routerLink]=\"['/media', media.id]\"> -->\n        @if (inEditMode) {\n          <!-- Edit Mode - Show Checkboxes -->\n          <div class=\"media-card\" [title]=\"media.title\">\n            <input\n              type=\"checkbox\"\n              [id]=\"media.id\"\n              class=\"media-card-checkbox\"\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"onMediaSelected(media, $event)\"\n              [checked]=\"selectedMedia.includes(media.id)\"\n            />\n            <ng-container *ngTemplateOutlet=\"mediaCard; context: {media: media}\"></ng-container>\n          </div>\n        } @else {\n          <!-- Normal Mode - Show Media Card -->\n          <div class=\"media-card\" [routerLink]=\"['/media', media.id]\" [title]=\"media.title\" [id]=\"media.id\">\n            <ng-container *ngTemplateOutlet=\"mediaCard; context: {media: media}\"></ng-container>\n          </div>\n        }\n      }\n    </div>\n  }\n</div>\n\n<ng-template #mediaCard let-media=\"media\">\n  <label [for]=\"media.id\">\n    <img\n      id=\"mediaImage{{ media.id }}\"\n      [src]=\"media.poster_path || 'assets/poster-sm.png'\"\n      [alt]=\"media.title\"\n      loading=\"lazy\"\n      (load)=\"media.isImageLoaded = true\"\n      (error)=\"media.isImageLoaded = true\"\n      [class.animated-gradient]=\"!media.isImageLoaded\"\n    />\n    <p>{{ media.title }}</p>\n  </label>\n  @if (media.status.toLowerCase() == 'downloading') {\n    <!-- Downloading Icon -->\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"monitored-icon\" aria-label=\"Downloading\">\n      <g transform=\"scale(0.9) translate(65,-60)\">\n        <path\n          d=\"M343 -107q-120 -42 -194.5 -146.5T74 -490q0 -29 4 -57.5T91 -604l-57 33 -37 -62 185 -107 106 184 -63 36 -54 -92q-13 30 -18.5 60.5T147 -490q0 113 65.5 200T381 -171zm291 -516v-73h107q-47 -60 -115.5 -93.5T480 -823q-66 0 -123.5 24T255 -734l-38 -65q54 -45 121 -71t142 -26q85 0 160.5 33T774 -769v-67h73v213zM598 -1 413 -107l107 -184 62 37 -54 94q123 -17 204.5 -110.5T814 -489q0 -19 -2.5 -37.5T805 -563h74q4 18 6 36.5t2 36.5q0 142 -87 251.5T578 -96l56 33z\"\n        >\n          <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 470 -480\" to=\"360 470 -480\" dur=\"5\" repeatCount=\"indefinite\" />\n        </path>\n      </g>\n    </svg>\n  } @else if (media.monitor) {\n    <!-- Monitored Icon -->\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" class=\"monitored-icon\" aria-label=\"Monitored\">\n      <path\n        d=\"M713-600 600-713l56-57 57 57 141-142 57 57-198 198ZM200-120v-640q0-33 23.5-56.5T280-840h280q-20 30-30 57.5T520-720q0 72 45.5 127T680-524q23 3 40 3t40-3v404L480-240 200-120Z\"\n      />\n    </svg>\n  } @else {\n    <!-- Trailer Exists Icon -->\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 -960 960 960\"\n      class=\"downloaded-icon\"\n      [class.success]=\"media.trailer_exists\"\n      aria-label=\"Trailer Exists\"\n    >\n      <path\n        d=\"M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q65 0 123 19t107 53l-58 59q-38-24-81-37.5T480-800q-133 0-226.5 93.5T160-480q0 133 93.5 226.5T480-160q133 0 226.5-93.5T800-480q0-18-2-36t-6-35l65-65q11 32 17 66t6 70q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm-56-216L254-466l56-56 114 114 400-401 56 56-456 457Z\"\n      />\n    </svg>\n  }\n</ng-template>\n\n<!-- Dialog to show List of Custom Filters -->\n<dialog #showFiltersDialog (close)=\"closeFilterDialog()\">\n  <div class=\"dialog-content\" (click)=\"$event.stopPropagation()\">\n    <div class=\"dialog-title\">Custom Filters</div>\n    @for (filter of customFilters(); track filter) {\n      <div class=\"filteritem-dropdown-option\">\n        <span (click)=\"openFilterEditDialog(filter)\" title=\"Edit Custom Filter\">\n          {{ filter.filter_name }}\n        </span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 -960 960 960\"\n          class=\"icon delete-icon\"\n          aria-label=\"Delete\"\n          (click)=\"deleteFilter(filter.id)\"\n          title=\"Delete Custom Filter\"\n        >\n          <path\n            d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"\n          />\n        </svg>\n      </div>\n    }\n  </div>\n  <div class=\"buttons-row\">\n    <!-- Button to Cancel Dialog -->\n    <button class=\"danger\" (click)=\"closeFilterDialog()\">Cancel</button>\n    <!-- Add New Custom Filter button -->\n    <button class=\"primary\" (click)=\"openFilterEditDialog(null)\">Add New</button>\n  </div>\n</dialog>\n<template #dialogContainer></template>\n", "import {Route} from '@angular/router';\nimport {MediaComponent} from './media.component';\n\nexport default [{path: '', loadComponent: () => MediaComponent}] as Route[];\n"],
  "mappings": "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",
  "names": []
}
