"""Delete Orphan Relations

Revision ID: 9606084facbe
Revises: f030a0fdc9d8
Create Date: 2025-07-11 03:04:15.125282

"""

from typing import Sequence, Union

from alembic import op
from app_logger import ModuleLogger

# revision identifiers, used by Alembic.
revision: str = "9606084facbe"
down_revision: Union[str, None] = "f030a0fdc9d8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

logger = ModuleLogger("AlembicMigrations")

CONVENTIONS = {
    "ix": "ix_%(column_0_label)s",
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(constraint_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "%(table_name)s_pkc",
}


def upgrade() -> None:
    # Disable foreign keys temporarily for migrations
    op.execute("PRAGMA foreign_keys=OFF")

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "filter", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_filter_customfilter_id_customfilter", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_filter_customfilter_id_customfilter",
            "customfilter",
            ["customfilter_id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table(
        "media", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_media_connection_id_connection", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_media_connection_id_connection",
            "connection",
            ["connection_id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table(
        "pathmapping", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_pathmapping_connection_id_connection", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_pathmapping_connection_id_connection",
            "connection",
            ["connection_id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table(
        "trailerprofile", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.create_unique_constraint(
            "uq_trailerprofile_customfilter_id", ["customfilter_id"]
        )
        batch_op.drop_constraint(
            "fk_trailerprofile_customfilter_id_customfilter",
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            "fk_trailerprofile_customfilter_id_customfilter",
            "customfilter",
            ["customfilter_id"],
            ["id"],
            ondelete="CASCADE",
        )

    # ### end Alembic commands ###

    # Re-enable foreign keys after migrations
    op.execute("PRAGMA foreign_keys=ON")
    logger.info(
        "Migration 9606084facbe completed successfully. Orphan relations"
        " deleted and foreign keys updated."
    )


def downgrade() -> None:
    # Disable foreign keys temporarily for migrations
    op.execute("PRAGMA foreign_keys=OFF")

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "trailerprofile", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_trailerprofile_customfilter_id_customfilter",
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            "fk_trailerprofile_customfilter_id_customfilter",
            "customfilter",
            ["customfilter_id"],
            ["id"],
        )
        batch_op.drop_constraint(
            "uq_trailerprofile_customfilter_id", type_="unique"
        )

    with op.batch_alter_table(
        "pathmapping", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_pathmapping_connection_id_connection", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_pathmapping_connection_id_connection",
            "connection",
            ["connection_id"],
            ["id"],
        )

    with op.batch_alter_table(
        "media", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_media_connection_id_connection", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_media_connection_id_connection",
            "connection",
            ["connection_id"],
            ["id"],
        )

    with op.batch_alter_table(
        "filter", schema=None, naming_convention=CONVENTIONS
    ) as batch_op:
        batch_op.drop_constraint(
            "fk_filter_customfilter_id_customfilter", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            "fk_filter_customfilter_id_customfilter",
            "customfilter",
            ["customfilter_id"],
            ["id"],
        )

    # ### end Alembic commands ###

    # Re-enable foreign keys after migrations
    op.execute("PRAGMA foreign_keys=ON")
