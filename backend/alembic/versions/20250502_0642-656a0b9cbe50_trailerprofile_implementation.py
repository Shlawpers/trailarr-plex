"""TrailerProfile Implementation

Revision ID: 656a0b9cbe50
Revises: 1c5ac69def9a
Create Date: 2025-05-02 06:42:44.954026

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app_logger import ModuleLogger
from sqlalchemy.orm import Session
from core.base.database.models.customfilter import CustomFilter
from core.base.database.models.filter import Filter, FilterCondition
from core.base.database.models.trailerprofile import TrailerProfile
from dotenv import load_dotenv
import os

APP_DATA_DIR = os.path.abspath(os.getenv("APP_DATA_DIR", "/config"))
ENV_PATH = f"{APP_DATA_DIR}/.env"

# Load environment variables, do not override system environment variables
load_dotenv(dotenv_path=ENV_PATH, override=False)

# revision identifiers, used by Alembic.
revision: str = "656a0b9cbe50"
down_revision: Union[str, None] = "1c5ac69def9a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

logger = ModuleLogger("AlembicMigrations")


def getenv_bool(key: str, default: bool) -> bool:
    return os.getenv(key.upper(), str(default)).lower() in ["true", "1"]


def getenv_int(key: str, default: int) -> int:
    return int(os.getenv(key.upper(), str(default)))


def getenv_str(key: str, default: str) -> str:
    return os.getenv(key.upper(), default)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("trailerprofile", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "always_search",
                sa.Boolean(),
                server_default=sa.false(),
                nullable=False,
            )
        )
    # ### end Alembic commands ###

    # Add initial TrailerProfile entries
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        logger.info("Creating initial TrailerProfiles from .env file")
        customfilter1 = CustomFilter(
            filter_name="Movie Trailers",
            filters=[
                Filter(
                    filter_by="is_movie",
                    filter_condition=FilterCondition.EQUALS,
                    filter_value="true",
                ),
                Filter(
                    filter_by="trailer_exists",
                    filter_condition=FilterCondition.EQUALS,
                    filter_value="false",
                ),
            ],
        )
        profile1 = TrailerProfile(
            file_format=getenv_str("TRAILER_FILE_FORMAT", "mkv"),
            file_name=getenv_str(
                "TRAILER_FILE_NAME", "{title} - Trailer-trailer.{ext}"
            ),
            folder_enabled=getenv_bool("TRAILER_FOLDER_MOVIE", False),
            audio_format=getenv_str("TRAILER_AUDIO_FORMAT", "aac"),
            audio_volume_level=getenv_int("TRAILER_AUDIO_VOLUME_LEVEL", 100),
            video_resolution=getenv_int("TRAILER_RESOLUTION", 1080),
            video_format=getenv_str("TRAILER_VIDEO_FORMAT", "h264"),
            subtitles_enabled=getenv_bool("TRAILER_SUBTITLES_ENABLED", False),
            subtitles_format=getenv_str("TRAILER_SUBTITLES_FORMAT", "srt"),
            subtitles_language=getenv_str("TRAILER_SUBTITLES_LANGUAGE", "en"),
            always_search=getenv_bool("TRAILER_ALWAYS_SEARCH", False),
            embed_metadata=getenv_bool("TRAILER_EMBED_METADATA", False),
            exclude_words=getenv_str("EXCLUDE_WORDS", ""),
            min_duration=getenv_int("TRAILER_MIN_DURATION", 30),
            max_duration=getenv_int("TRAILER_MAX_DURATION", 600),
            remove_silence=getenv_bool("TRAILER_REMOVE_SILENCE", False),
            search_query=getenv_str(
                "TRAILER_SEARCH_QUERY", "{title} {year} {is_movie} trailer"
            ),
            customfilter=customfilter1,
        )
        session.add(profile1)
        profile2 = TrailerProfile(**profile1.model_dump())
        profile2.customfilter = CustomFilter(
            filter_name="Series Trailers",
            filters=[
                Filter(
                    filter_by="is_movie",
                    filter_condition=FilterCondition.EQUALS,
                    filter_value="false",
                ),
                Filter(
                    filter_by="trailer_exists",
                    filter_condition=FilterCondition.EQUALS,
                    filter_value="false",
                ),
            ],
        )
        profile2.folder_enabled = getenv_bool("TRAILER_FOLDER_SERIES", True)
        session.add(profile2)
        session.commit()
        logger.info("Initial TrailerProfiles created successfully")
    except Exception as e:
        logger.error(f"Failed to create initial TrailerProfiles: {e}")
        session.rollback()
        raise
    finally:
        session.close()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("trailerprofile", schema=None) as batch_op:
        batch_op.drop_column("always_search")
    # ### end Alembic commands ###

    # No need to delete specific TrailerProfiles as downgrade typically removes schema changes
