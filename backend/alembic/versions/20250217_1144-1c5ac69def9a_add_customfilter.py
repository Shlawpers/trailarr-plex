"""Add Customfilter

Revision ID: 1c5ac69def9a
Revises: 4b942197af6a
Create Date: 2025-02-17 11:44:30.883330

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from app_logger import ModuleLogger


# revision identifiers, used by Alembic.
revision: str = "1c5ac69def9a"
down_revision: Union[str, None] = "4b942197af6a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

logging = ModuleLogger("AlembicMigrations")


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "customfilter",
        sa.Column(
            "filter_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "filter_type",
            sa.Enum("HOME", "MOVIES", "SERIES", "TRAILER", name="filtertype"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "filter",
        sa.Column(
            "filter_by", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "filter_condition",
            sa.Enum(
                # "IS_TRUE",
                # "IS_FALSE",
                "IS_AFTER",
                "IS_BEFORE",
                "IN_THE_LAST",
                "NOT_IN_THE_LAST",
                "EQUALS",
                "NOT_EQUALS",
                "GREATER_THAN",
                "GREATER_THAN_EQUAL",
                "LESS_THAN",
                "LESS_THAN_EQUAL",
                "CONTAINS",
                "NOT_CONTAINS",
                "STARTS_WITH",
                "NOT_STARTS_WITH",
                "ENDS_WITH",
                "NOT_ENDS_WITH",
                "IS_EMPTY",
                "IS_NOT_EMPTY",
                name="filtercondition",
            ),
            nullable=False,
        ),
        sa.Column(
            "filter_value", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("customfilter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["customfilter_id"],
            ["customfilter.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trailerprofile",
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "file_format", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "file_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("folder_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "folder_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "audio_format", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("audio_volume_level", sa.Integer(), nullable=False),
        sa.Column("video_resolution", sa.Integer(), nullable=False),
        sa.Column(
            "video_format", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("subtitles_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "subtitles_format",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "subtitles_language",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column("embed_metadata", sa.Boolean(), nullable=False),
        sa.Column(
            "exclude_words", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "include_words", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("min_duration", sa.Integer(), nullable=False),
        sa.Column("max_duration", sa.Integer(), nullable=False),
        sa.Column("remove_silence", sa.Boolean(), nullable=False),
        sa.Column(
            "search_query", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("customfilter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["customfilter_id"],
            ["customfilter.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trailerprofile")
    op.drop_table("filter")
    op.drop_table("customfilter")
    # ### end Alembic commands ###
